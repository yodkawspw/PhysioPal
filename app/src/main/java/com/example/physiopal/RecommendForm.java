package com.example.physiopal;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.SeekBar;
import android.widget.TextView;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

public class RecommendForm extends AppCompatActivity {

    TextView painLevelText, resultText;
    SeekBar painSeekBar;
    RadioGroup bodyPartGroup;
    Button recommendButton,viewExerciseButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_recommend_form);

        bodyPartGroup = findViewById(R.id.bodyPartGroup);
        painSeekBar = findViewById(R.id.painSeekBar);
        painLevelText = findViewById(R.id.painLevel);
        recommendButton = findViewById(R.id.recommendButton);
        resultText = findViewById(R.id.resultText);
        viewExerciseButton = findViewById(R.id.viewExerciseButton);

        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏à‡πá‡∏ö‡∏õ‡∏ß‡∏î‡πÅ‡∏ö‡∏ö Real-time
        painSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                painLevelText.setText("‡∏£‡∏∞‡∏î‡∏±‡∏ö: " + progress);
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {}

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {}
        });

        // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏î‡∏π‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥"
        recommendButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                int selectedId = bodyPartGroup.getCheckedRadioButtonId();
                int painLevel = painSeekBar.getProgress();

                String recommendation = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å";
                boolean showExerciseButton = false;

                if (selectedId != -1) {
                    RadioButton selectedButton = findViewById(selectedId);
                    String selectedBodyPart = selectedButton.getText().toString();

                    recommendation = getRecommendation(selectedBodyPart, painLevel);
                    showExerciseButton = !recommendation.startsWith("‚ö†Ô∏è") && !recommendation.contains("‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á");
                }

                resultText.setText(recommendation);
                resultText.setVisibility(View.VISIBLE);

                // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢
                viewExerciseButton.setVisibility(showExerciseButton ? View.VISIBLE : View.GONE);
            }
        });

        viewExerciseButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                int selectedId = bodyPartGroup.getCheckedRadioButtonId();
                int painLevel = painSeekBar.getProgress();

                if (selectedId != -1) {
                    RadioButton selectedButton = findViewById(selectedId);
                    String selectedBodyPart = selectedButton.getText().toString();

                    Intent intent = null;
                    switch (selectedBodyPart) {
                        case "‡∏´‡∏±‡∏ß‡πÄ‡∏Ç‡πà‡∏≤":
                            intent = getExerciseIntent(getKneeExercise(painLevel));
                            break;
                        case "‡∏Ç‡πâ‡∏≠‡πÑ‡∏´‡∏•‡πà":
                            intent = getExerciseIntent(getShoulderExercise(painLevel));
                            break;
                        case "‡∏´‡∏•‡∏±‡∏á":
                            intent = getExerciseIntent(getBackExercise(painLevel));
                            break;
                    }

                    if (intent != null) {
                        startActivity(intent);
                    }
                }
            }
        });

        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ Intent ‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
    private Intent getExerciseIntent(String recommendation) {
        if (recommendation.contains("Quad Set")) {
            return new Intent(getApplicationContext(), QuadSet.class);
        } else if (recommendation.contains("Leg Raise")) {
            return new Intent(getApplicationContext(), StraightLegRaise.class);
        } else if (recommendation.contains("Shoulder Roll")) {
            return new Intent(getApplicationContext(), ShoulderRoll.class);
        } else if (recommendation.contains("Wall Walk")) {
            return new Intent(getApplicationContext(), WallWalk.class);
        } else if (recommendation.contains("Cat-Cow Stretch")) {
            return new Intent(getApplicationContext(), CatCow.class);
        } else if (recommendation.contains("Bridge Exercise")) {
            return new Intent(getApplicationContext(), Bridge.class);
        }
        return null;
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡πà‡∏≤‡∏Å‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏ï‡∏≤‡∏°‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    private String getRecommendation(String bodyPart, int painLevel) {
        switch (bodyPart) {
            case "‡∏´‡∏±‡∏ß‡πÄ‡∏Ç‡πà‡∏≤":
                return getKneeExercise(painLevel);
            case "‡∏Ç‡πâ‡∏≠‡πÑ‡∏´‡∏•‡πà":
                return getShoulderExercise(painLevel);
            case "‡∏´‡∏•‡∏±‡∏á":
                return getBackExercise(painLevel);
            default:
                return "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å";
        }
    }

    private String getKneeExercise(int painLevel) {
        if (painLevel <= 3) {
            return "‚úÖ ‡∏ó‡πà‡∏≤ Quad Set ‡πÄ‡∏ö‡∏≤‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á";
        } else if (painLevel <= 6) {
            return "üîπ ‡∏ó‡πà‡∏≤ Leg Raise ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏£‡∏≠‡∏ö‡πÄ‡∏Ç‡πà‡∏≤";
        } else {
            return "‚ö†Ô∏è ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏£‡∏á‡∏°‡∏≤‡∏Å ‡∏≠‡∏≤‡∏à‡∏•‡∏≠‡∏á‡∏ô‡∏ß‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏∞‡∏Ñ‡∏ö‡πÄ‡∏¢‡πá‡∏ô";
        }
    }

    private String getShoulderExercise(int painLevel) {
        if (painLevel <= 3) {
            return "‚úÖ ‡∏ó‡πà‡∏≤ Shoulder Roll ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô";
        } else if (painLevel <= 6) {
            return "üîπ ‡∏ó‡πà‡∏≤ Wall Walk ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ü‡∏∑‡πâ‡∏ô‡∏ü‡∏π‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß";
        } else {
            return "‚ö†Ô∏è ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏±‡∏Å ‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Ñ‡∏ö‡∏≠‡∏∏‡πà‡∏ô";
        }
    }

    private String getBackExercise(int painLevel) {
        if (painLevel <= 3) {
            return "‚úÖ ‡∏ó‡πà‡∏≤ Cat-Cow Stretch ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢‡∏Å‡∏£‡∏∞‡∏î‡∏π‡∏Å‡∏™‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á";
        } else if (painLevel <= 6) {
            return "üîπ ‡∏ó‡πà‡∏≤ Bridge Exercise ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏á";
        } else {
            return "‚ö†Ô∏è ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡πâ‡∏°‡∏ï‡∏±‡∏ß‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏Ñ‡∏ß‡∏£‡∏ô‡∏≠‡∏ô‡∏û‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏¢‡∏∑‡∏î‡πÄ‡∏ö‡∏≤‡πÜ";
        }
    }

    @Override
    protected void onResume() {
        super.onResume();
        resultText.setVisibility(View.GONE);
        viewExerciseButton.setVisibility(View.GONE);
    }
}